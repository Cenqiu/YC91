JavaSE 学习: 基本语法(C语言) + OOP(面向对象编程)

OOP特性:
封装:
	1.封, 将对象属性封闭
	2.装,将相关业务装在一个类中
	
	静态关键字: static 修饰属性和方法, 块( 内部类 )
	
	class A {
		static int age;
		static void test();
		static void test(int a);
		static {
			//  静态块 在类被加载到虚拟机时,被执行,并且只会被执行一次
			//  jdbc 数据库驱动的初始化
		}
	}
	
	A a = new A();
	A.age;  
	A.test(); // 工具类==> 静态方法
	
	方法重载: 一个类中出现方法名相同, 参数不同(  类型,  数量,  顺序 )
	
	包:
		package 定义包名, 使用 . 号分割层级 ==> 目录(文件夹)
			对类分门别类存放, 解决类同名问题
		import 导入一个类
		import 类路径, 知名一个类的地址( 导入一个类)
		import 包路径.* 表示导入该包下所有的类
	
	jar 包:
		eclipse => export => jar包 => 将工程的类打包成jar文件\
		jar ==> zip 文件
	 
继承
	在现实生活中的继承，可以理解为儿子继承了父亲的财产，即财产重用；
	面向对象程序设计中的继承，则是代码重用；
	继承是利用现有的类创建新类的过程，现有的类称作基类（或父类），创建的新类称作派生类（子类）。
	
	关于覆盖与扩展:
	覆盖: 子类重新定义从父类继承的属性和方法
	
	继承是能自动传播代码和重用代码的有力工具；
	继承能够在某些比较一般的类的基础上建造、建立和扩充新类；
	能减少代码和数据的重复冗余度，并通过增强一致性来减少模块间的接口和界面，从而增强了程序的可维护性；
	能清晰地体现出类与类之间的层次结构关系。\
	
	java继承是单方向的，即子类可以继承和访问父类中的成员，但父类则无法访问子类中的成员；
	在Java中只允许单一继承方式，即一个派生类只能继承于一个基类，而不能象C++中派生类继承于多个基类的多重继承方式。
	
	
	

多态