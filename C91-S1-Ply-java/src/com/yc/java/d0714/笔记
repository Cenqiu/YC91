回顾:
继承是指从一个基类（父类）派生出派生类（子类）的过程；
继承使用关键字extends；
对于类成员，可以使用public、protected、缺省和private这4种访问权限修饰符；
对于类，可以使用public和缺省这2个访问权限；
创建子类实例时，必须先执行父类的构造方法，然后再执行子类的构造方法；
super关键字有两种主要用途，都与父类有关。

=========================

多态
父类的引用指向哪个类的实例就调用哪个类中的方法；(new谁调谁)
同样是使用父类的引用，调用同一个名称的方法，却可以得到不同的调用结果，这就是Java中的多态，即：同一函数，多种形态；
实际上多态包括动态多态(重写)和静态多态(重载)。

静态多态也称为编译时多态，即在编译时决定调用哪个方法；
静态多态一般是指方法重载；
只要构成了方法重载，就可以认为形成了静态多态的条件；
静态多态与是否发生继承没有必然联系。

动态多态也称为运行时多态，即在运行时才能确定调用哪个方法；
形成动态多态必须具体以下条件：
必须要有继承的情况存在；
在继承中必须要有方法覆盖；
必须由基类的引用指向派生类的实例，并且通过基类的引用调用被覆盖的方法；
由上述条件可以看出，继承是实现动态多态的首要前提。

方法多态:  看 = 号的右边
属性多态:  看 = 号的左边
