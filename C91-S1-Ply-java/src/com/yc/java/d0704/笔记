
类的定义

class 类名 {

	属性:  private String name;
	
	方法:  private void test( 参数列表  ) { ... }
	
	构造方法: 格式: 方法名与类名一致,  没有返回类型
		public 类名 ( 参数列表  ) { ... }
			执行: 在创建对象时执行一次, 只能执行一次, 必须使用 new 关键调用
		类名 a = new 类名();

}



在成员变量前加static关键字，可以将其声明为静态成员变量；
如果类中成员变量被定义为静态，那么不论有多少个对象，静态成员变量只有一份内存拷贝，即所有对象共享该成员变量；
静态成员变量的作用域只在类内部，但其生命周期却贯穿整个程序。

在成员方法前加static关键字，可以将其声明为静态成员方法；
静态成员方法只能对类的静态成员变量进行操作；
静态成员方法没有this引用；
在没有实例化对象时，可以通过类名访问静态成员方法。

静态的成员没有  "对象" 的概念





重载:
	1. 同一个类, 方法名相同,  参数不同( 类型, 顺序, 个数)
		无关的内容: 返回值, 参数名, 异常声明
	吃 : 西餐 ( 刀叉 ) , 中餐(碗筷),  印度菜 ( 手  无参数)

静态: 没有对象
	静态成员的访问:  使用 类名
	
	
静态成员包括静态数据成员和静态成员方法；
静态成员属于整个类而不是属于某个对象，它(静态成员:属性,方法)被该类的所有对象共享；
访问静态成员时一般通过类名访问，也可以通过对象访问(不推荐, 会告警) ；
静态成员也受访问权限的约束；(public private)
静态数据成员在使用之前应尽量初始化；( 不强制要求 )
静态成员方法不能操作非静态成员(对象的成员)；
静态成员方法没有this引用。






















